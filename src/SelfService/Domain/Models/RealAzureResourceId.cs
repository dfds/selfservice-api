using System.Text.RegularExpressions;

namespace SelfService.Domain.Models;

/// <summary>
/// This represents the REAL AWS account id in the form of a 12-digit number that uniquely identifies an AWS account.
/// This account id is generated by AWS.
/// </summary>
public class RealAzureResourceId : ValueObject
{
    public static readonly RealAzureResourceId Empty = new("");

    private readonly string _value;

    private RealAzureResourceId(string value)
    {
        _value = value;
    }

    protected override IEnumerable<object> GetEqualityComponents()
    {
        yield return _value;
    }

    public override string ToString()
    {
        return _value;
    }

    public static RealAzureResourceId Parse(string? text)
    {
        if (TryParse(text, out var resourceId))
        {
            return resourceId;
        }

        throw new FormatException($"Value \"{text}\" is not a valid external azure resource id.");
    }

    public static bool TryParse(string? text, out RealAzureResourceId resouceId)
    {
        // TODO -- [thfis] allow empty string for now, since we've got those in the database
        if (string.IsNullOrEmpty(text))
        {
            resouceId = Empty;
            return true;
        }

        if (string.IsNullOrWhiteSpace(text) || !Regex.IsMatch(text, @"\d{12}"))
        {
            resouceId = null!;
            return false;
        }

        resouceId = new RealAzureResourceId(text);
        return true;
    }

    public static implicit operator RealAzureResourceId(string text) => Parse(text);

    public static implicit operator string(RealAzureResourceId accountId) => accountId.ToString();
}
