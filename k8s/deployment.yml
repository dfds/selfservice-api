apiVersion: apps/v1
kind: Deployment
metadata:
  name: selfservice-api
  namespace: selfservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selfservice-api
  template:
    metadata:
      labels:
        app: selfservice-api
      annotations:
        prometheus.io/port: "8888"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: selfservice-api
      volumes:
        - name: selfservice-git
          secret:
            secretName: selfservice-git
      initContainers:
        - name: dbmigration
          image: 579478677147.dkr.ecr.eu-central-1.amazonaws.com/selfservice-api/dbmigrations:${BUILD_NUMBER}
          envFrom:
            - secretRef:
                name: selfservice-api-postgres
      containers:
        - name: app
          image: 579478677147.dkr.ecr.eu-central-1.amazonaws.com/selfservice-api/app:${BUILD_NUMBER}
          ports:
            - name: web
              containerPort: 8080
            - name: metrics
              containerPort: 8888
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10
          volumeMounts:
            - mountPath: /app/.ssh/key
              subPath: key
              name: selfservice-git
          env:
            - name: SS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: selfservice-api-postgres
                  key: PGCONNSTRING
            - name: DEFAULT_KAFKA_GROUP_ID
              value: build.selfservice.selfservice-api
            - name: SS_APISPECS_TOPIC
              value: cloudengineering.selfservice.apispecs
            - name: SS_PROMETHEUS_API_ENDPOINT
              value: http://monitoring-kube-prometheus-prometheus.monitoring:9090
            - name: ECR_PULL_PERMISSION_AWS_ACCOUNT_ID
              value: "${ECR_PULL_PERMISSION_AWS_ACCOUNT_ID}"
            - name: ECR_PULL_PERMISSION_AWS_ORGANIZATION_ID
              value: "${ECR_PULL_PERMISSION_AWS_ORGANIZATION_ID}"
            - name: LOCAL_DEV_SKIP_AWS_ECR_REPOSITORY_CREATION
              value: "false"
            - name: "SS_ARM_ENABLED"
              value: "true"
            - name: "SS_ARM_TEMPORARY_REPO_PATH"
              value: "/tmp/ssu-azure-rg-manifests"
            - name: "SS_ARM_REMOTE_REPO_URI"
              value: "${SS_ARM_REMOTE_REPO_URI}"
            - name: "SS_ARM_GIT_USERNAME"
              value: "selfservice-api"
            - name: "SS_ARM_GIT_EMAIL"
              value: "ssu@dfds.cloud"
            - name: "SS_ARM_GIT_BRANCH"
              value: "master"
            - name: "SS_AWS_ACCOUNT_TEMPORARY_REPO_PATH"
              value: "/tmp/ssu-aws-account-manifests"
            - name: "SS_AWS_ACCOUNT_REMOTE_REPO_URI"
              value: "${SS_AWS_ACCOUNT_REMOTE_REPO_URI}"
            - name: "SS_AWS_ACCOUNT_GIT_USERNAME"
              value: "selfservice-api"
            - name: "SS_AWS_ACCOUNT_GIT_EMAIL"
              value: "ssu@dfds.cloud"
            - name: "SS_AWS_ACCOUNT_GIT_BRANCH"
              value: "master"
            - name: "DEFAULT_KAFKA_ENABLE_AUTO_COMMIT"
              value: "false"
            - name: "SS_CONFLUENT_GATEWAY_API_ENDPOINT"
              value: http://confluent-gateway.selfservice:8080
          envFrom:
            - secretRef:
                name: kafka-credentials
            - secretRef:
                name: selfservice-api-topdesk
            - secretRef:
                name: selfservice-api-msgraph
            - secretRef:
                name: selfservice-api-platformdata
          resources:
            requests:
              memory: "150Mi"
              cpu: "50m"
            limits:
              memory: "300Mi"
              cpu: "400m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: selfservice-api-gendis
  namespace: selfservice
  labels:
    project: selfservice
    department: devex
    app: selfservice-api-gendis
    component: selfservice-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selfservice-api-gendis
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5225"
      labels:
        app: selfservice-api-gendis
        project: selfservice
        department: devex
    spec:
      containers:
        - name: app
          image: dfdsdk/dafda-gendis:v0.9.2
          ports:
            - name: metrics
              containerPort: 5225
          env:
            - name: DAFDA_OUTBOX_NOTIFICATION_CHANNEL
              value: dafda_outbox
            - name: GENDIS_PREFIX_FOR_KAFKA
              value: DEFAULT_KAFKA_
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: selfservice-api-postgres
                  key: PGCONNSTRING
          envFrom:
            - secretRef:
                name: kafka-credentials
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "200m"
