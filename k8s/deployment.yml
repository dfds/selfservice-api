apiVersion: apps/v1
kind: Deployment
metadata:
  name: selfservice-api
  namespace: selfservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selfservice-api
  template:
    metadata:
      labels:
        app: selfservice-api
      annotations:
        prometheus.io/port: "8888"
        prometheus.io/scrape: "true"
    spec:
      initContainers:
        - name: dbmigration
          image: 579478677147.dkr.ecr.eu-central-1.amazonaws.com/selfservice-api/dbmigrations:${BUILD_NUMBER}
          envFrom:
            - secretRef:
                name: selfservice-api-postgres
      containers:
        - name: app
          image: 579478677147.dkr.ecr.eu-central-1.amazonaws.com/selfservice-api/app:${BUILD_NUMBER}
          ports:
            - name: web
              containerPort: 8080
            - name: metrics
              containerPort: 8888
          env:
            - name: SS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: selfservice-api-postgres
                  key: PGCONNSTRING
            - name: DEFAULT_KAFKA_GROUP_ID
              value: build.selfservice.selfservice-api
            - name: SS_APISPECS_TOPIC
              value: cloudengineering.selfservice.apispecs
            - name: SS_PROMETHEUS_API_ENDPOINT
              value: http://monitoring-kube-prometheus-prometheus.monitoring:9090
          envFrom:
            - secretRef:
                name: kafka-credentials
            - secretRef:
                name: selfservice-api-topdesk
            - secretRef:
                name: selfservice-api-msgraph
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: selfservice-api-gendis
  namespace: selfservice
  labels:
    project: selfservice
    department: devex
    app: selfservice-api-gendis
    component: selfservice-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: selfservice-api-gendis
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5225"
      labels:
        app: selfservice-api-gendis
        project: selfservice
        department: devex
    spec:
      containers:
        - name: app
          image: public.ecr.aws/d8r0z9h2/dafda-gendis:0.9.1
          ports:
            - name: metrics
              containerPort: 5225
          env:
            - name: DAFDA_OUTBOX_NOTIFICATION_CHANNEL
              value: dafda_outbox
            - name: GENDIS_PREFIX_FOR_KAFKA
              value: DEFAULT_KAFKA_
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: selfservice-api-postgres
                  key: PGCONNSTRING
          envFrom:
            - secretRef:
                name: kafka-credentials
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "200Mi"
              cpu: "200m"
